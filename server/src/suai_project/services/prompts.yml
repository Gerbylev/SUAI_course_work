highlights_from_text: |
  Ты — технический эксперт — разбей задачу на подзадачи и выяви обязательные условия для того, что бы считать её закрытой.
  
  Важно что бы описание подзадачи и обязательные условия были максимально полными, то есть если надо во что то преобразовать данные укажи во что, если надо проанализировать рынок в какой то период, укажи в какой и так далее. 

  Задача:
  {{task_text}}
  
  Комментарий:
  {{comment}}
  
  В ответ верни, каждая подзадача на новой строчке:
  <описание подзадачи> -> <условие 1>\t<условие 2>\t...\t<условие n>
  
  В ответе может присутствовать только описание подзадачи, знак -> для разделения подзадачи с её условиями и обязательные условия через \t . Не пиши больше никаких комментариев.

highlights_from_text_and_files: |
  Пока что я хлеб = )
  

check_code_style: |
  Ты — технический эксперт — тебе надо сделать ревью кода, это должны быть краткие комментарии, что можно улучшить.
  
  Но не особо сильно придирайся, если код написан не плохо, то лучше сказать, good и не большой комментарий, что улучшить.
  
  {% for file in files -%}
  Путь файла: {{ file.file_name }}.
  Контент: {{ file.content }}.
  {% endfor %}
  
  В ответе верни, в первой строчке вердикт как написан код good, terribly, great, а дальше комментарий как улучшить код, важно он должен быть кратким.
  "terribly" возвращай только тогда, когда работу студента нельзя принять, не почистив код!

chose_file_for_check_code_style: |
  Ты — технический эксперт — выбери примерно 10 файлов, для проверки чистоты кода.
  
  Выбирай файлы, которые написал именно пользователь, нам не нужны библиотеки, файлы конфигурации и другие в которых нету кода!
  
  {% for file in files -%}
  Путь файла: {{ file.file_name }}
  {% endfor %}
  
  В ответ верни пути до файлов, которые ты выбрал, каждый с новой строчки. Больше ни чего не возвращай!

prompt_files: |
  <files>
  {% for file in files -%}
  {{ file.file_name }}
  {% endfor %}
  </files>
  
agency_prompt: |
  Тебе надо проверить сделал ли ученик задачу, для этого ты можешь запрашивать файлы, которые предоставлены выше.
  
  Задача: {{highlight.task}}
  Условия для выполнения задания:  {{ files | map(attribute='requirement') | join('\t') }}
  
  Для того что бы запросить файлы, "запрашиваю файлы" потом перенос строки и на следующих строчках можешь перечислить файлы, которые тебе нужны.
  
  Если готов дать ответ ответь, "Ответ:" в этой же строчке скажи задание "выполнено" или "провалено", если задание не выполнено, то дай краткий комментарий, что нужно исправить.
  В ответе ты можешь либо сказать ответ, либо запросить файлы, сделать и то и то нельзя.
  Не торопись давать ответ, лучше лишний раз запросить файл, чем дать неправильный ответ.

put_files: |
  Запрашиваемые файлы:
  {% for file in files -%}
  Путь файла: {{ file.file_name }}
  Контент: {{ file.content }}.
  {% endfor %}


prompt_back_to_script: |
  Вернись в наш сценарий!
  
  Для того что бы запросить файлы, "запрашиваю файлы" и на следующих строчках можешь перечислить файлы, которые тебе нужны.

  Если готов дать ответ ответь, "Ответ:" дальше скажи задание "выполнено" или "провалено", если задание не выполнено, то дай краткий комментарий, что нужно исправить.